// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'charging_place.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

ChargingPlace _$ChargingPlaceFromJson(Map<String, dynamic> json) =>
    ChargingPlace(
      id: json['id'] as String,
      name: json['name'] as String,
      description: json['description'] as String?,
      phoneNumber: json['phone_number'] as String?,
      address: json['address'] as String?,
      latitude: (json['latitude'] as num).toDouble(),
      longitude: (json['longitude'] as num).toDouble(),
      iconType: $enumDecode(_$IconTypeEnumMap, json['icon_type']),
      access: json['access'] as int?,
      accessRestriction: json['access_restriction'] as String?,
      accessRestrictionDescription:
          json['access_restriction_description'] as String?,
      accessRestrictions: (json['access_restrictions'] as List<dynamic>?)
          ?.map((e) => e as String)
          .toList(),
      cost: json['cost'] as bool?,
      costDescription: json['cost_description'] as String?,
      hours: json['hours'] as String?,
      open247: json['open247'] as bool?,
      comingSoon: json['coming_soon'] as bool?,
      amenities: (json['amenities'] as List<dynamic>?)
          ?.map((e) => Amenity.fromJson(e as Map<String, dynamic>))
          .toList(),
      photos: (json['photos'] as List<dynamic>?)
          ?.map((e) => Photo.fromJson(e as Map<String, dynamic>))
          .toList(),
      reviews: (json['reviews'] as List<dynamic>?)
          ?.map((e) => Review.fromJson(e as Map<String, dynamic>))
          .toList(),
      stations: (json['stations'] as List<dynamic>)
          .map((e) => Station.fromJson(e as Map<String, dynamic>))
          .toList(),
      score: (json['score'] as num?)?.toDouble(),
      totalPhotos: json['total_photos'] as int?,
      totalReviews: json['total_reviews'] as int?,
    )..companyName =
        $enumDecodeNullable(_$CompanyEnumMap, json['company_name']);

Map<String, dynamic> _$ChargingPlaceToJson(ChargingPlace instance) =>
    <String, dynamic>{
      'id': instance.id,
      'name': instance.name,
      'description': instance.description,
      'phone_number': instance.phoneNumber,
      'address': instance.address,
      'latitude': instance.latitude,
      'longitude': instance.longitude,
      'icon_type': _$IconTypeEnumMap[instance.iconType]!,
      'company_name': _$CompanyEnumMap[instance.companyName],
      'access': instance.access,
      'access_restriction': instance.accessRestriction,
      'access_restriction_description': instance.accessRestrictionDescription,
      'access_restrictions': instance.accessRestrictions,
      'cost': instance.cost,
      'cost_description': instance.costDescription,
      'hours': instance.hours,
      'open247': instance.open247,
      'coming_soon': instance.comingSoon,
      'amenities': instance.amenities,
      'photos': instance.photos,
      'reviews': instance.reviews,
      'stations': instance.stations,
      'score': instance.score,
      'total_photos': instance.totalPhotos,
      'total_reviews': instance.totalReviews,
    };

const _$IconTypeEnumMap = {
  IconType.publicStandard: 'G',
  IconType.repairStandard: 'GR',
  IconType.publicFast: 'Y',
  IconType.repairFast: 'YR',
  IconType.home: 'H',
  IconType.restricted: 'B',
};

const _$CompanyEnumMap = {
  Company.sitronics: 'Sitronics',
  Company.myecars: 'my.eCars',
  Company.itcharge: 3,
  Company.rushydro: 4,
  Company.mostransport: 5,
  Company.zevs: 6,
  Company.evtime: 7,
  Company.touchStation: 8,
  Company.nsp: 9,
  Company.portalEnergy: 10,
  Company.rosseti: 11,
  Company.chargeNet: 12,
  Company.punktE: 13,
  Company.v4d: 14,
};

Photo _$PhotoFromJson(Map<String, dynamic> json) => Photo(
      caption: json['caption'] as String?,
      createdAt: DateTime.parse(json['created_at'] as String),
      id: json['id'] as String,
      url: json['url'] as String,
      userId: json['user_id'] as String,
    );

Map<String, dynamic> _$PhotoToJson(Photo instance) => <String, dynamic>{
      'caption': instance.caption,
      'created_at': instance.createdAt.toIso8601String(),
      'id': instance.id,
      'url': instance.url,
      'user_id': instance.userId,
    };

Review _$ReviewFromJson(Map<String, dynamic> json) => Review(
      comment: json['comment'] as String,
      connectorType:
          $enumDecodeNullable(_$ConnectorTypeEnumMap, json['connector_type']),
      createdAt: DateTime.parse(json['created_at'] as String),
      id: json['id'] as String,
      outletId: json['outlet_id'] as String?,
      stationId: json['station_id'] as String?,
      rating: $enumDecode(_$RatingEnumMap, json['rating']),
      vehicleName: json['vehicle_name'] as String?,
      vehicleType: $enumDecodeNullable(
          _$VehicleTypeEnumMap, json['vehicle_type'],
          unknownValue: VehicleType.unknown),
      userName: json['user_name'] as String?,
    );

Map<String, dynamic> _$ReviewToJson(Review instance) => <String, dynamic>{
      'comment': instance.comment,
      'connector_type': _$ConnectorTypeEnumMap[instance.connectorType],
      'created_at': instance.createdAt.toIso8601String(),
      'id': instance.id,
      'outlet_id': instance.outletId,
      'station_id': instance.stationId,
      'rating': _$RatingEnumMap[instance.rating]!,
      'vehicle_name': instance.vehicleName,
      'vehicle_type': _$VehicleTypeEnumMap[instance.vehicleType],
      'user_name': instance.userName,
    };

const _$ConnectorTypeEnumMap = {
  ConnectorType.unknown: 0,
  ConnectorType.wall: 1,
  ConnectorType.type1: 2,
  ConnectorType.chademo: 3,
  ConnectorType.teslaRoadster: 4,
  ConnectorType.nema1450: 5,
  ConnectorType.tesla: 6,
  ConnectorType.type2: 7,
  ConnectorType.type3: 8,
  ConnectorType.wallBS1363: 9,
  ConnectorType.wallEuro: 10,
  ConnectorType.commando: 11,
  ConnectorType.cssCombo: 13,
  ConnectorType.threePhase: 14,
  ConnectorType.caravanMainsSocket: 15,
  ConnectorType.gbt: 16,
  ConnectorType.type3a: 24,
};

const _$RatingEnumMap = {
  Rating.negative: -1,
  Rating.neutral: 0,
  Rating.positive: 1,
};

const _$VehicleTypeEnumMap = {
  VehicleType.unknown: 0,
  VehicleType.nissanLeaf: 1,
  VehicleType.chevroletVolt: 2,
  VehicleType.teslaModelS: 4,
  VehicleType.mitsubishiIMiev: 5,
  VehicleType.fordFocusElectric: 7,
  VehicleType.priusPlugInhybrid: 9,
  VehicleType.fordFusionEnergi: 13,
  VehicleType.toyotaRav4Ev: 14,
  VehicleType.hondaAccordPlugIn: 15,
  VehicleType.smartFortwoEd: 16,
  VehicleType.chevroletSparkEv: 17,
  VehicleType.bmwI3: 18,
  VehicleType.fiat500e: 20,
  VehicleType.cadillacElr: 22,
  VehicleType.eGolf: 23,
  VehicleType.audiA3ETron: 24,
  VehicleType.mercedesB250e: 33,
  VehicleType.kiaSoulEv: 34,
  VehicleType.opelAmpera: 36,
  VehicleType.zoe: 38,
  VehicleType.kangooZE: 40,
  VehicleType.twizy: 41,
  VehicleType.bydE6: 42,
  VehicleType.outlanderPlugInhybrid: 44,
  VehicleType.porscheCayenneSEHybrid: 46,
  VehicleType.x5Xdrive40ePlugInhybrid: 49,
  VehicleType.a3SportbackETron: 50,
  VehicleType.xc90RechargePlugInhybrid: 51,
  VehicleType.teslaModelX: 52,
  VehicleType.nissanENv200: 53,
  VehicleType.chevroletVoltGen2: 54,
  VehicleType.nissanLeaf2016: 57,
  VehicleType.bmw330ePlugInhybrid: 59,
  VehicleType.mercedesC350ePlugInhybrid: 61,
  VehicleType.chevroletBoltEv: 63,
  VehicleType.toyotaPriusPrime: 64,
  VehicleType.volvoV60RechargePlugInhybrid: 65,
  VehicleType.hyundaiIoniqElectric: 68,
  VehicleType.hondaClarityPlugInhybrid: 74,
  VehicleType.teslaModel3: 75,
  VehicleType.eGolf2017: 77,
  VehicleType.soulEv2018: 78,
  VehicleType.nissanLeaf2017: 80,
  VehicleType.nissanLeaf2018: 81,
  VehicleType.bmw225xePlugInhybrid: 82,
  VehicleType.bmwI32018: 86,
  VehicleType.jaguarIPace: 88,
  VehicleType.hyundaiKonaElectric2019: 89,
  VehicleType.volvoV90PlugInhybrid: 90,
  VehicleType.nissanLeaf2019: 91,
  VehicleType.other: 99,
  VehicleType.xiaopengXpengG3: 113,
  VehicleType.lifan330: 133,
  VehicleType.bydYuan: 135,
  VehicleType.geelyLynkAndCo01: 152,
  VehicleType.changanBenniEStar: 154,
  VehicleType.mercedesE350e: 156,
  VehicleType.opelAmperaE: 163,
  VehicleType.mercedesSls: 172,
  VehicleType.bydTang: 175,
  VehicleType.mercedesBClass: 206,
  VehicleType.bydDenza: 207,
  VehicleType.mclarenP1: 221,
  VehicleType.smartEqForfour: 234,
  VehicleType.bjevEuSeries: 239,
  VehicleType.mercedesAECell: 245,
  VehicleType.jacIev7s: 250,
  VehicleType.mitsubishiMinicabMiev: 255,
  VehicleType.bydQin: 257,
  VehicleType.bydQinPro: 261,
  VehicleType.smartFortwoEdW453: 265,
  VehicleType.songPro: 274,
  VehicleType.nissanSylphy: 288,
  VehicleType.lrRangeRover: 290,
  VehicleType.jacIev7s2: 305,
  VehicleType.mercedesC300e: 307,
  VehicleType.ladaElKalina: 318,
  VehicleType.cheryEq: 329,
  VehicleType.kiaNiroEv2019: 331,
  VehicleType.audiETron2019: 332,
  VehicleType.harleyDavidsonLivewire: 334,
  VehicleType.volkswagenEGolf2018: 336,
  VehicleType.volkswagenEGolf2019: 337,
  VehicleType.porscheTaycan2020: 338,
  VehicleType.kiaSoulEv2019: 339,
  VehicleType.zeroDsr: 343,
  VehicleType.hondaE2020: 345,
  VehicleType.mercedesEqc400: 346,
  VehicleType.kiaSoulEv2020: 347,
  VehicleType.teslaModelY: 352,
  VehicleType.peugeotE2008: 360,
  VehicleType.volvoS60RechargePlugInhybrid2019: 366,
  VehicleType.landRoverRangeRoverSportPlugInhybrid2020: 368,
  VehicleType.toyotaPriusPrime2020: 370,
  VehicleType.miniCooperSe2020: 375,
  VehicleType.miniCountrymanPlugInhybrid2020: 376,
  VehicleType.bmwI32019: 377,
  VehicleType.bmwI32020: 378,
  VehicleType.polestar2: 384,
  VehicleType.chevroletBoltEv2020: 387,
  VehicleType.kiaNiroEv2020: 388,
  VehicleType.hyundaiKonaElectric2020: 389,
  VehicleType.hyundaiIoniqElectric2020: 390,
  VehicleType.hyundaiIoniqElectric2019: 391,
  VehicleType.audiETronsportback: 394,
  VehicleType.eGoLife: 396,
  VehicleType.fordMustangMachE2021: 398,
  VehicleType.toyotaRav4Prime2021: 399,
  VehicleType.nissanLeaf2020: 400,
  VehicleType.bmwCEvolution: 401,
  VehicleType.skodaSuperbIv: 403,
  VehicleType.audiA7PlugInhybrid: 406,
  VehicleType.miniCooperSe2021: 407,
  VehicleType.volkswagenId3: 410,
  VehicleType.volkswagenEGolf2020: 412,
  VehicleType.mercedesGlc300e: 413,
  VehicleType.hyundaiKonaElectric2021: 414,
  VehicleType.mazdaMx30: 419,
  VehicleType.volvoV60RechargePlugInhybrid2020: 420,
  VehicleType.mercedesEqv: 428,
  VehicleType.bmw330ePlugInhybrid2020: 434,
  VehicleType.smartEqFortwo: 440,
  VehicleType.bentleyBentaygaHybrid: 441,
  VehicleType.volkswagenELavida: 446,
  VehicleType.volkswagenId4: 452,
  VehicleType.mercedesGle350PlugInhybrid: 453,
  VehicleType.volkswagenPassatSportscombiGtePlugInhybrid: 460,
  VehicleType.porscheTaycan2021: 465,
  VehicleType.avtovazLadaEllada: 468,
  VehicleType.mercedesGla250e: 469,
  VehicleType.nissanLeaf2021: 472,
  VehicleType.audiETron2020: 473,
  VehicleType.audiETron2021: 474,
  VehicleType.bydEv360: 475,
  VehicleType.audiETrongt2021: 476,
  VehicleType.aiwaysU52021: 478,
  VehicleType.landRoverRangeRoverPlugInhybrid2021: 484,
  VehicleType.renaultMeganeETechplugInhybrid: 488,
  VehicleType.audiETrongt2022: 492,
  VehicleType.audiQ4ETron2021: 504,
  VehicleType.audiETronsportback2021: 508,
  VehicleType.cupraFormentorPlugInhybrid: 524,
  VehicleType.kiaNiroEv2021: 526,
  VehicleType.bmwI32021: 549,
  VehicleType.bmwIx2021: 566,
  VehicleType.bmwI4Edrive402022: 567,
  VehicleType.hondaE2021: 569,
  VehicleType.gacAionS: 578,
  VehicleType.jeepRenegade4xePlugInhybrid2021: 581,
  VehicleType.nissanLeaf2022: 598,
  VehicleType.lucidMotorsLucidAir: 599,
  VehicleType.citroenEJumpy: 600,
  VehicleType.volvoXc40Recharge2021: 616,
  VehicleType.volvoXc90RechargePlugInhybrid2021: 622,
  VehicleType.volvoXc90RechargePlugInhybrid2022: 623,
  VehicleType.volvoXc60RechargePlugInhybrid2021: 625,
  VehicleType.volvoS90RechargePlugInhybrid2021: 630,
  VehicleType.volvoS90RechargePlugInhybrid2022: 631,
  VehicleType.bydHan: 655,
  VehicleType.mercedesEqa300: 657,
  VehicleType.mercedesEqs450Plus: 659,
  VehicleType.geelyGeometryC: 660,
  VehicleType.skywellEt5: 668,
  VehicleType.porscheTaycan2022: 669,
  VehicleType.hozonNezhaU: 671,
};

CheckIn _$CheckInFromJson(Map<String, dynamic> json) => CheckIn(
      userId: json['user_id'] as String,
      stationId: json['station_id'] as String,
      outletId: json['outlet_id'] as String,
      rating: $enumDecode(_$RatingEnumMap, json['rating']),
      finishesAt: DateTime.parse(json['finishes_at'] as String),
      userName: json['user_name'] as String,
      vehicleType:
          $enumDecodeNullable(_$VehicleTypeEnumMap, json['vehicle_type']),
      comment: json['comment'] as String? ?? "",
      kilowatts: (json['kilowatts'] as num?)?.toDouble(),
      isAuto: json['is_auto'] as bool? ?? true,
    );

Map<String, dynamic> _$CheckInToJson(CheckIn instance) => <String, dynamic>{
      'user_id': instance.userId,
      'station_id': instance.stationId,
      'outlet_id': instance.outletId,
      'rating': _$RatingEnumMap[instance.rating]!,
      'finishes_at': instance.finishesAt.toIso8601String(),
      'user_name': instance.userName,
      'vehicle_type': _$VehicleTypeEnumMap[instance.vehicleType],
      'comment': instance.comment,
      'kilowatts': instance.kilowatts,
      'is_auto': instance.isAuto,
    };

PlugshareUser _$PlugshareUserFromJson(Map<String, dynamic> json) =>
    PlugshareUser(
      countryCode: json['country_code'] as String?,
      displayName: json['display_name'] as String,
      id: json['id'] as String,
      vehicleDescription: json['vehicle_description'] as String?,
      vehicleType: $enumDecodeNullable(
          _$VehicleTypeEnumMap, json['vehicle_type'],
          unknownValue: VehicleType.teslaModelS),
    );

Map<String, dynamic> _$PlugshareUserToJson(PlugshareUser instance) =>
    <String, dynamic>{
      'country_code': instance.countryCode,
      'display_name': instance.displayName,
      'id': instance.id,
      'vehicle_description': instance.vehicleDescription,
      'vehicle_type': _$VehicleTypeEnumMap[instance.vehicleType],
    };
